var HistoryNavigator = require('./HistoryNavigator');
var settings = require('../settings');
var StateContext = require('../StateContext');
var HTML5HistoryManager = (function () {
    function HTML5HistoryManager() {
        this.disabled = (typeof window === 'undefined') || !(window.history && window.history.pushState);
    }
    HTML5HistoryManager.prototype.init = function () {
        if (!this.disabled)
            window.addEventListener('popstate', HistoryNavigator.navigateHistory);
    };
    HTML5HistoryManager.prototype.addHistory = function (state, url, replace) {
        url = url != null ? url : StateContext.url;
        url = settings.applicationPath + url;
        if (!this.disabled && location.pathname + location.search !== url) {
            if (!replace)
                window.history.pushState(null, null, url);
            else
                window.history.replaceState(null, null, url);
        }
    };
    HTML5HistoryManager.prototype.getCurrentUrl = function () {
        return location.pathname.substring(settings.applicationPath.length) + location.search;
    };
    HTML5HistoryManager.prototype.getHref = function (url) {
        if (!url)
            throw new Error('The Url is invalid');
        return settings.applicationPath + url;
    };
    HTML5HistoryManager.prototype.getUrl = function (anchor) {
        return anchor.pathname.substring(settings.applicationPath.length) + anchor.search;
    };
    return HTML5HistoryManager;
})();
module.exports = HTML5HistoryManager;
