var TypeConverter = (function () {
    function TypeConverter(key, name) {
        this.key = key;
        this.name = name;
    }
    TypeConverter.prototype.convertFrom = function (val, queryString) {
        if (queryString === void 0) { queryString = false; }
        return null;
    };
    TypeConverter.prototype.convertTo = function (val) {
        return null;
    };
    TypeConverter.getTypeName = function (obj) {
        var typeName = Object.prototype.toString.call(obj);
        return typeName.substring(8, typeName.length - 1).toLowerCase();
    };
    TypeConverter.getName = function (obj) {
        var fullName = this.getTypeName(obj);
        if (fullName === 'array') {
            var arr = obj;
            var subName = 'string';
            for (var i = 0; i < arr.length; i++) {
                if (arr[i] != null && arr[i].toString()) {
                    subName = this.getTypeName(arr[i]);
                    break;
                }
            }
            fullName = subName + fullName;
        }
        return fullName;
    };
    return TypeConverter;
})();
module.exports = TypeConverter;
